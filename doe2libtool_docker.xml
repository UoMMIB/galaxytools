<tool id="doe2libtool (docker)" name="DoE2LibTool (docker)" version="0.1.0">
    <requirements>
    <container type="docker">sbc1</container>
  </requirements>
  <description>Generate combinatorial parts library from DoE instructions.</description>
    <command detect_errors="exit_code"><![CDATA[
    python3 $__tool_directory__/design2doeTool.py $input1 $input2 $input3 $output1 $output2 $output3
    ]]></command>
    <inputs>
    	<param name="input1" type="data" format="xlsx" label="Design sheet"
	       help="Design plan sheet" />
    	<param name="input2" type="text" label="Library name" value="SBCDE" help="Library name" />
    	<param name="input3" type="data" format="txt" label="Library" help="Combinatorial library" />
    </inputs>
    <outputs>
        <data name="output1" format="pdf" from_work_dir="out.pdf" />
        <data name="output2" format="zip" from_work_dir="out.zip" />
	<data name="output3" format="txt" from_work_dir="out.txt" />
    </outputs>
    <help><![CDATA[
    Generate DNA library specifications from the DoE instructions.

    - Inputs:    
        - Design sheet: an *xlsx* file with the following columns:

            - DoE position: position in the construct. i.e. 1,2,3..
            - DoE permutation class: 1 if the gene position can be rearranged.
	    - DoE designation: origin, resistance, promoter or gene.
	    - Part number: SBC identifier or '-' for empty promoter
	    - Name: part name.	    

	 - Library name: desired name of the library.
	 - Library: combinatorial table generated by JMP in *txt* (*dat*) format.
	 
     - Outputs:
	 - *zip* file containing the DoE results.
         - *pdf* file with the diagram representation.
	 - *txt* file with the ICE combinations (for plasmid Genie).

.. class:: infomark

Pablo Carbonell, SYNBIOCHEM, University of Manchester, 2020.

    ]]></help>
</tool>
