<tool id="enzscrtool" name="Enzyme Screening Tool" version="0.1.0">
  <description>generate worklist for enzyme screening.</description>
  <command detect_errors="exit_code"><![CDATA[
  docker run -v $__tool_directory__:/tools -v /export/galaxy-central/database/files:/export/galaxy-central/database/files:rw -v /export/galaxy-central/database/job_working_directory:/export/galaxy-central/database/job_working_directory:rw -v $__tool_directory__/data:/data -e SBC_ASSEMBLY_PATH=/tools/code/sbc-assembly -e DATA=/data -e ICE_SERVER=$ice.input2 -e ICE_USERNAME=$ice.input3 -e ICE_PASSWORD=$ice.input4 -e ICE_GROUP=$ice.input6 -e INPUT=$input1 -e OUTPUT=$output1 sbc1 python /tools/enzscrTool.py -assays $input1 -output $output1 
        #for $q in $queries2
            -plates ${q.input3}
        #end for
  ]]></command>
  <inputs>
    <param name="input1" type="data" label="Assays" help="Enzyme assays file" format="csv"/>
        <repeat name="queries2" title="Plate files (zip,csv,xlsx)">
            <param name="input3" type="data" label="Plate file" format="csv,zip,xlsx" />
        </repeat>
    <section name="ice" title="ICE Options" expanded="false">
      <param name="input2" type="text" label="ICE Server" help="ICE registry server"
	     value="https://ice.synbiochem.co.uk"/>
      <param name="input3" type="text" label="ICE User" help="ICE user name">
	<sanitizer invalid_char="">
	  <valid initial="string.ascii_letters,string.digits,string.punctuation">
	    <add value="_" />
	  </valid>
	</sanitizer>
      </param>
      <param name="input4" type="text" label="ICE Pass" help="ICE login"/>
      <sanitizer invalid_char="">
	<valid initial="string.ascii_letters,string.digits,string.punctuation">
	  <add value="_" />
	</valid>
      </sanitizer>
      <param name="input6" type="text" label="ICE Group" help="ICE Group" value="synbiochem"/>
    </section>
  </inputs>
  <outputs>
    <data name="output1" format="zip" from_work_dir="out.zip" />
  </outputs>
  <environment_variables>
    <environment_variable name="PYTHONPATH">$__tool_directory__/code/PlasmidGenieClient</environment_variable>
  </environment_variables>
    <help><![CDATA[
    PlasmidGenie: generate plasmids, parts and oligos list for a given combinatorial library.

    Inputs:

    - Assays: csv file (see .. _template: https://github.com/neilswainston/sbc-assembly/blob/master/data/enz_scr/enz_scr.csv).
    - Plates: csv or zip file with plates inside "plates" folder.
    - ICE details.

    Outputs:
    
    - zip file with worklists.
    
.. class:: infomark

Pablo Carbonell, SYNBIOCHEM, University of Manchester, 2020.
    ]]></help>
</tool>
